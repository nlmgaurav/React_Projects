    Throw the ball

       int solution(const vector<int> &receiver, long long k) {
    const int n = receiver.size();
    unordered_map<int, int> have(n);
    vector<int> s = {0};
    have[0] = 0;
    ++k;
    for (int x = 0;;) {
        x = receiver[x] - 1;
        if (have.count(x)) {
            const int ind = have[x];
            const int t = s.size() - ind, tail = (k - ind) % t;
            return s[ind + ((tail == 0) ? t : tail) - 1] + 1;
        }
        have[x] = s.size();
        s.push_back(x);
        if (s.size() == k) {
            return x + 1;
        }
    }
    return -1;
}


int main() {
    cout << solution({2, 4, 1, 5, 3}, 6) << endl;
    cout << solution({3, 1, 4, 2}, 5) << endl;
    return 0;
    
}